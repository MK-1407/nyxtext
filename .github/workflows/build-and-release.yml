name: Build and Release

on:
  push:
    branches:
      - main  

jobs:
  build-and-release:
    runs-on: windows-latest 

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  

    - name: Create and Activate Virtual Environment
      run: |
        python -m venv .venv
        .venv\Scripts\Activate.ps1
      shell: pwsh
  
    - name: Install Dependencies
      run: |
        .venv\Scripts\Activate.ps1
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: | 
        .venv\Scripts\Activate.ps1
        pyinstaller Nyxtext.spec

    - name: Zip the Build
      run: |
        Compress-Archive -Path ./dist/Nyxtext/* -DestinationPath ./Nyxtext-${{ github.run_number }}.zip

    - name: Get Current Date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Get Commit Message
      id: log
      run: echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: Release ${{ steps.date.outputs.date }}
        body: ${{ steps.log.outputs.message }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Nyxtext-${{ github.run_number }}.zip
        asset_name: Nyxtext-${{ steps.date.outputs.date }}.zip
        asset_content_type: application/zip
